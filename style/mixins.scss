@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@mixin fp($properties, $min-value, $max-value, $min-screen: 300px, $max-screen: 1920px) {
  @if unit($min-value) == 'rem' {
    $min-value: strip-unit($min-value) * $font-size;
  }

  @if unit($max-value) == 'rem' {
    $max-value: strip-unit($max-value) * $font-size;
  }

  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-screen) {
      @each $property in $properties {
        #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);
      }
    }

    @media screen and (min-width: $max-screen) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

// Requires the calc-interpolation function which can also be used independently

@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {
  $a: ($max-value - $min-value) / ($max-screen - $min-screen);
  $b: $min-value - $a * $min-screen;

  $sign: '+';
  @if ($b < 0) {
    $sign: '-';
    $b: abs($b);
  }

  @return calc(#{$a*100}vw #{$sign} #{$b});
}

@mixin media-small {
  @media (max-width: 650px) {
    @content;
  }
}
